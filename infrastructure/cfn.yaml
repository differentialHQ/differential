AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  AssetUploadBucketName:
    Type: String
    Description: Name for the S3 bucket used for asset uploads

  CfnTemplateBucketName:
    Type: String
    Description: Name for the S3 bucket used for CFN template storage

  CfnSNSWebhook:
    Type: String
    Description: URL of the control plane CF webhook

Resources:
  AssetUploadBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref AssetUploadBucketName

  CfnTemplateBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Ref CfnTemplateBucketName

  AssetReadWritePolicy:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: AssetReadWritePolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - "s3:PutObject"
                - "s3:GetObject"
                - "s3:DeleteObject"
              Resource: !Sub "arn:aws:s3:::${AssetUploadBucket}/*"
            - Effect: Allow
              Action:
                - "s3:GetObject"
              Resource: !Sub "arn:aws:s3:::${CfnTemplateBucket}/*"
        Users:
          - !Ref ControlPlaneUser

  LambdaManagementPolicy:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: LambdaManagementPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - "logs:FilterLogEvents"
              Resource: "arn:aws:logs:*:*:log-group:/aws/lambda/differential-deployment-*"
            - Effect: Allow
              Action:
                - "lambda:GetFunction"
                - "lambda:DeleteFunction"
                - "lambda:CreateFunction"
                - "lambda:UpdateFunctionCode"
                - "lambda:UpdateFunctionConfiguration"
                - "lambda:PutFunctionConcurrency"
                - "lambda:PutFunctionEventInvokeConfig"
                - "lambda:ListTags"
                - "lambda:TagResource"
                - "lambda:InvokeFunction"
              Resource: "arn:aws:lambda:*:*:function:differential-deployment-*"
            - Effect: Allow
              Action: iam:PassRole
              Resource: !GetAtt DeploymentLambdaRuntimeRole.Arn
        Users:
          - !Ref ControlPlaneUser

  DeploymentCloudFormationPolicy:
      Type: AWS::IAM::Policy
      Properties:
        PolicyName: DeploymentCloudFormationPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
            - Effect: Allow
              Action:
                - "sns:Publish"
                - "sns:ConfirmSubscription"
              Resource: !Ref DeploymentCloudFormationTopic
            - Effect: Allow
              Action:
                - "cloudformation:CreateStack"
                - "cloudformation:UpdateStack"
                - "cloudformation:DescribeStacks"
                - "cloudformation:GetTemplate"
                - "cloudformation:ValidateTemplate"
                - "cloudformation:CreateChangeSet"
                - "cloudformation:ExecuteChangeSet"
                - "cloudformation:DeleteStack"
              Resource: "arn:aws:cloudformation:*:*:stack/differential-deployment-*"
        Users:
          - !Ref ControlPlaneUser

  DeploymentCloudFormationTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: DeploymentCloudFormationTopic

  DeploymentCloudFormationSubscription:
    Type: AWS::SNS::Subscription
    Properties:
      Endpoint: !Ref CfnSNSWebhook
      TopicArn: !Ref DeploymentCloudFormationTopic
      Protocol: "https"
      DeliveryPolicy: |
        {
          "requestPolicy": {
            "headerContentType": "application/json; charset=UTF-8"
          }
        }

  DeploymentLambdaRuntimeRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: DeploymentLambdaRuntimeRole
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: DeploymentLambdaRuntimePolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource: "arn:aws:logs:*:*:*"

  ControlPlaneUser:
    Type: AWS::IAM::User
    Properties:
      UserName: "DifferentialControlPlane"

Outputs:
  AssetUploadBucket:
    Description: S3 bucket used for asset uploads
    Value: !Ref AssetUploadBucket
  CfnTemplateBucket:
    Description: S3 bucket used for deployment templates
    Value: !Ref CfnTemplateBucket
  DeploymentCloudFormationTopic:
    Description: SNS topic for subscribing to CloudFormation status updates
    Value: !Ref DeploymentCloudFormationTopic
